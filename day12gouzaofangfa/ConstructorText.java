/*
1、构造方法又被称为构造函数/构造器/ Constructor

2、构造方法语法结构:
            【修饰符列表】构造方法名(形式参数列表){  注意没有static
                     构造方法体
             }

3、回顾普通方法的语法结构:
  【修饰符列表】返回值类型 方法名(形式参数列表){
        方法体
   }

4、对于构造方法来说,返回值类型不需要指定,并且也不能void,
   只要写上void,那么这个方法就成为普通方法了。

5、对于构造方法来说,构造方法的方法名必须和类名保持一致。

6、构造方法的作用?
   构造方法存在的意义是,通过构造方法的调用,可以创建对象。  我们之前学的new也是构造方法

7、构造方法应该怎么调用?
   普通方法是这样调用的:方法修饰符中有 stati的时候:类名,方法名(实参列表)、方法修饰符列表中没有static时：引用.方法名（实参列表）

   new 构造方法名(实参列表)

8.构造方法调用之后有返回值吗
  有返回值，只不过不用写return，返回值就是那个地址，返回值类型是所在类的名字，类似于C语言构造动态的结构体
  
9.当把user中的构造方法注释掉还能运行   当一个类中不构造方法的话，系统会默认给该类构造一个无参的方法，这个构造方法被称为缺省构造器  这也就是为什么以前类里面只写数据类型而不写
  构造方法还能运行的原因
  
10、当一个类将含有参数的将构造方法定义出来了,那么系统则不再默认为这个类提供缺省构造器。建议开发中手动的为当前类提供无参数构造方法。因为无参数构造方法太常用了。

11、构造方法支持重机制。在一个类当中编写多个构造方法,这多个构造方法显然已经构成方法重载机制
*/

public class ConstructorText
{
	public static void main(String[ ] args)
	{
		//User u = new User();  //
		
		//创建了五个对象
		//User u = new User();  //调用方法
		User s = new User(4);  
		User d = new User(4.7);
		User f = new User("王二麻子");
		User g = new User(6);   
		System.out.println(s.j);  //使用的是s这个对象的内存
    System.out.println(d.j);  //使用的是d这个对象的内存

    s.f();
	}
	
	
}
//懂了，因为顾客不同，用static的话顾客类只会保留最后一个顾客的行为，但是用实例方法的话，每个顾客都会有一个单独的内存空间存储结果，互不影响